<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.schuwalow</groupId>
        <artifactId>zio-todo</artifactId>
        <version>0.0.1</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>zio-todo-app</artifactId>

    <name>ZIO Todo Backend - App</name>
    <packaging>jar</packaging>

    <properties>
        <version.scala.epoch>2.12</version.scala.epoch>
        <version.scala.release>${version.scala.epoch}.8</version.scala.release>
        <version.scala.zinc>1.1.7</version.scala.zinc>

        <version.fs2>1.0.3</version.fs2>
        <version.http4s>0.20.0-M3</version.http4s>
        <version.circe>0.11.1</version.circe>
        <version.slf4j>1.7.26</version.slf4j>
        <version.zio>1.0-RC3</version.zio>

        <mainClass>com.schuwalow.zio.todo.Main</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scalaz</groupId>
            <artifactId>scalaz-zio_${version.scala.epoch}</artifactId>
            <version>${version.zio}</version>
        </dependency>
        <dependency>
            <groupId>org.scalaz</groupId>
            <artifactId>scalaz-zio-interop-cats_${version.scala.epoch}</artifactId>
            <version>${version.zio}</version>
        </dependency>
        <dependency>
            <groupId>org.http4s</groupId>
            <artifactId>http4s-server_${version.scala.epoch}</artifactId>
            <version>${version.http4s}</version>
        </dependency>
        <dependency>
            <groupId>org.http4s</groupId>
            <artifactId>http4s-blaze-server_${version.scala.epoch}</artifactId>
            <version>${version.http4s}</version>
        </dependency>
        <dependency>
            <groupId>org.http4s</groupId>
            <artifactId>http4s-dsl_${version.scala.epoch}</artifactId>
            <version>${version.http4s}</version>
        </dependency>
        <dependency>
            <groupId>org.http4s</groupId>
            <artifactId>http4s-circe_${version.scala.epoch}</artifactId>
            <version>${version.http4s}</version>
        </dependency>
        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>cats-core_${version.scala.epoch}</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>cats-effect_${version.scala.epoch}</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>io.circe</groupId>
            <artifactId>circe-core_${version.scala.epoch}</artifactId>
            <version>${version.circe}</version>
        </dependency>
        <dependency>
            <groupId>io.circe</groupId>
            <artifactId>circe-generic_${version.scala.epoch}</artifactId>
            <version>${version.circe}</version>
        </dependency>
        <dependency>
            <groupId>co.fs2</groupId>
            <artifactId>fs2-core_${version.scala.epoch}</artifactId>
            <version>${version.fs2}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${version.scala.epoch}</artifactId>
            <version>3.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>com.github.pureconfig</groupId>
            <artifactId>pureconfig_${version.scala.epoch}</artifactId>
            <version>0.10.2</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${version.scala.epoch}</artifactId>
            <version>3.0.5</version>
        </dependency>
        <dependency>
            <groupId>org.scalamock</groupId>
            <artifactId>scalamock_${version.scala.epoch}</artifactId>
            <version>4.1.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.carrotgarden.maven</groupId>
                <artifactId>scalor-maven-plugin_${version.scala.epoch}</artifactId>
                <version>1.4.2.20180508161326</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>clean-main</goal>
                            <goal>clean-test</goal>
                            <goal>register-main</goal>
                            <goal>register-test</goal>
                            <goal>compile-main</goal>
                            <goal>compile-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <zincOptionsJava>
                        -encoding ${project.build.sourceEncoding}
                        -source ${maven.compiler.source}
                        -target ${maven.compiler.target}
                        -deprecation
                    </zincOptionsJava>

                    <zincOptionsScala>
                        -target:jvm-${maven.compiler.target}
                        -compileorder:JavaThenScala
                        -useScopesCompiler:true
                        -withVersionClasspathValidator:true
                        -language:higherKinds
                        -language:existentials
                        -explaintypes
                        -Xfuture
                        -Ypartial-unification
                        -Xfatal-warnings
                        -deprecation
                        -feature
                        -unchecked
                        -Xlint:_
                        -Ywarn-value-discard
                        -Ywarn-numeric-widen
                        -Ywarn-extra-implicit
                        -Ywarn-unused:_
                        -Ywarn-inaccessible
                        -Ywarn-infer-any
                        -Ywarn-nullary-override
                        -Ywarn-nullary-unit
                        -opt:l:inline
                    </zincOptionsScala>

                    <zincLogActiveLevel>info</zincLogActiveLevel>
                    <zincStateStoreType>binary</zincStateStoreType>

                    <defineBridge>
                        <dependency>
                            <groupId>org.scala-sbt</groupId>
                            <artifactId>compiler-bridge_${version.scala.epoch}</artifactId>
                            <version>${version.scala.zinc}</version>
                        </dependency>
                    </defineBridge>
                    <defineCompiler>
                        <dependency>
                            <groupId>org.scala-lang</groupId>
                            <artifactId>scala-compiler</artifactId>
                            <version>${version.scala.release}</version>
                        </dependency>
                    </defineCompiler>
                    <definePluginList>
                        <dependency>
                            <groupId>org.spire-math</groupId>
                            <artifactId>kind-projector_${version.scala.epoch}</artifactId>
                            <version>0.9.4</version>
                        </dependency>
                        <dependency>
                            <groupId>com.olegpy</groupId>
                            <artifactId>better-monadic-for_${version.scala.epoch}</artifactId>
                            <version>0.3.0-M4</version>
                        </dependency>
                    </definePluginList>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <parallel>true</parallel>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${project.basedir}/scalastyle-config.xml</configLocation>
                    <outputFile>${project.build.directory}/scalastyle-output.xml</outputFile>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                        <skipMain>true</skipMain>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
